/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type Project = {
  _id: string;
  _type: "project";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  isArticle?: boolean;
  title: string;
  slug: Slug;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  taxonomies?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "taxonomy";
  }>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  githubUrl?: string;
};

export type Article = {
  _id: string;
  _type: "article";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  isArticle?: boolean;
  title: string;
  slug: Slug;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  taxonomies?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "taxonomy";
  }>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type Taxonomy = {
  _id: string;
  _type: "taxonomy";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  descriptiveNote?: string;
  icon?: Icon;
  prefLabel: string;
  definition?: string;
  related?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "taxonomy";
  };
  broader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "taxonomy";
  };
  narrower?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "taxonomy";
  };
};

export type Settings = {
  _id: string;
  _type: "settings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  blurb?: string;
  contact?: Contact;
  about?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  homepage?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  };
  navigation?: Array<{
    _key: string;
  } & NavGroup>;
};

export type Gallery_block = {
  _type: "gallery_block";
  style?: "swiper" | "gallery";
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  }>;
};

export type Contact_block = {
  _type: "contact_block";
  buttonText?: string;
};

export type Image_block = {
  _type: "image_block";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  accented?: boolean;
};

export type Archive_block = {
  _type: "archive_block";
  archiveType?: "article" | "project";
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  filterable?: boolean;
  featuredTaxonomies?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "taxonomy";
  }>;
};

export type Info_block = {
  _type: "info_block";
  title: string;
  items?: Array<{
    title?: string;
    subTitle?: string;
    infoType: "icon" | "number";
    icon?: Icon;
    number?: number;
    _type: "item";
    _key: string;
  }>;
};

export type Newsletter_block = {
  _type: "newsletter_block";
  note?: string;
  callToAction?: string;
  text?: string;
};

export type FeaturedArticles_block = {
  _type: "featuredArticles_block";
  title: string;
  articles?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "article";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "project";
  }>;
};

export type Text_block = {
  _type: "text_block";
  text?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type FeaturedTaxonomies_block = {
  _type: "featuredTaxonomies_block";
  taxonomies?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "taxonomy";
  }>;
};

export type Blocks = {
  _type: "blocks";
  blocks?: Array<{
    _key: string;
  } & Archive_block | {
    _key: string;
  } & Contact_block | {
    _key: string;
  } & FeaturedArticles_block | {
    _key: string;
  } & FeaturedTaxonomies_block | {
    _key: string;
  } & Gallery_block | {
    _key: string;
  } & Image_block | {
    _key: string;
  } & Info_block | {
    _key: string;
  } & Newsletter_block | {
    _key: string;
  } & Text_block>;
};

export type NavGroup = {
  _type: "navGroup";
  title?: string;
  items?: Array<{
    title?: string;
    page: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "archive";
    };
    _type: "item";
    _key: string;
  }>;
};

export type Note = string;

export type Contact = {
  _type: "contact";
  email?: string;
  phone?: string;
  website?: Link;
  socials?: Array<{
    _key: string;
  } & Social>;
};

export type BasicDate = {
  _type: "basicDate";
  displayDateSpecificity: "YYYY-MM-DD, HH:mm" | "YYYY-MM-DD" | "YYYY-MM" | "YYYY";
  recurrence?: "" | "RRULE:FREQ=DAILY;INTERVAL=1" | "RRULE:FREQ=WEEKLY;INTERVAL=1" | "RRULE:FREQ=MONTHLY;INTERVAL=1" | "RRULE:FREQ=YEARLY;INTERVAL=1";
  startDate?: string;
  endDate?: string;
};

export type Link = {
  _type: "link";
  text: string;
  type?: "internal" | "external";
  link?: string;
  page?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "archive";
  };
};

export type Archive = {
  _id: string;
  _type: "archive";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  blocks?: {
    blocks?: Array<{
      _key: string;
    } & Archive_block | {
      _key: string;
    } & Contact_block | {
      _key: string;
    } & FeaturedArticles_block | {
      _key: string;
    } & FeaturedTaxonomies_block | {
      _key: string;
    } & Gallery_block | {
      _key: string;
    } & Image_block | {
      _key: string;
    } & Info_block | {
      _key: string;
    } & Newsletter_block | {
      _key: string;
    } & Text_block>;
  };
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  blocks?: {
    blocks?: Array<{
      _key: string;
    } & Archive_block | {
      _key: string;
    } & Contact_block | {
      _key: string;
    } & FeaturedArticles_block | {
      _key: string;
    } & FeaturedTaxonomies_block | {
      _key: string;
    } & Gallery_block | {
      _key: string;
    } & Image_block | {
      _key: string;
    } & Info_block | {
      _key: string;
    } & Newsletter_block | {
      _key: string;
    } & Text_block>;
  };
  slug: Slug;
};

export type Social = {
  _type: "social";
  socialTitle: string;
  socialType: "twitter" | "instagram" | "facebook" | "vimeo" | "linkedin" | "github" | "mastodon";
  url: string;
};

export type Icon = {
  _type: "icon";
  name?: string;
};

export type MediaTag = {
  _id: string;
  _type: "media.tag";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: Slug;
};

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes = Project | Article | Taxonomy | Settings | Gallery_block | Contact_block | Image_block | Archive_block | Info_block | Newsletter_block | FeaturedArticles_block | Text_block | FeaturedTaxonomies_block | Blocks | NavGroup | Note | Contact | BasicDate | Link | Archive | Page | Social | Icon | MediaTag | SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityImageHotspot | SanityImageCrop | SanityFileAsset | SanityImageAsset | SanityImageMetadata | Geopoint | Slug | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./sanity/queries/queries.ts
// Variable: pagesSlugs
// Query: *[_type == "page" && defined(slug.current)] {		"slug": slug.current	}
export type PagesSlugsResult = Array<{
  slug: string;
}>;
// Variable: settingsQuery
// Query: *[_id == "siteSettings"][0] {		...,		logo {			...,			"imageAsset":asset->		},		homepage->{			slug		},		navigation[]{			title,			pages[]->{				"slug":slug.current			}		}	}
export type SettingsQueryResult = {
  _id: string;
  _type: "archive";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  blocks?: {
    blocks?: Array<{
      _key: string;
    } & Archive_block | {
      _key: string;
    } & Contact_block | {
      _key: string;
    } & FeaturedArticles_block | {
      _key: string;
    } & FeaturedTaxonomies_block | {
      _key: string;
    } & Gallery_block | {
      _key: string;
    } & Image_block | {
      _key: string;
    } & Info_block | {
      _key: string;
    } & Newsletter_block | {
      _key: string;
    } & Text_block>;
  };
  logo: null;
  homepage: null;
  navigation: null;
} | {
  _id: string;
  _type: "article";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  isArticle?: boolean;
  title: string;
  slug: Slug;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  taxonomies?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "taxonomy";
  }>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  logo: null;
  homepage: null;
  navigation: null;
} | {
  _id: string;
  _type: "media.tag";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: Slug;
  logo: null;
  homepage: null;
  navigation: null;
} | {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  blocks?: {
    blocks?: Array<{
      _key: string;
    } & Archive_block | {
      _key: string;
    } & Contact_block | {
      _key: string;
    } & FeaturedArticles_block | {
      _key: string;
    } & FeaturedTaxonomies_block | {
      _key: string;
    } & Gallery_block | {
      _key: string;
    } & Image_block | {
      _key: string;
    } & Info_block | {
      _key: string;
    } & Newsletter_block | {
      _key: string;
    } & Text_block>;
  };
  slug: Slug;
  logo: null;
  homepage: null;
  navigation: null;
} | {
  _id: string;
  _type: "project";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  isArticle?: boolean;
  title: string;
  slug: Slug;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  taxonomies?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "taxonomy";
  }>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  githubUrl?: string;
  logo: null;
  homepage: null;
  navigation: null;
} | {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
  logo: null;
  homepage: null;
  navigation: null;
} | {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
  logo: null;
  homepage: null;
  navigation: null;
} | {
  _id: string;
  _type: "settings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  logo: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    imageAsset: {
      _id: string;
      _type: "sanity.imageAsset";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      originalFilename?: string;
      label?: string;
      title?: string;
      description?: string;
      altText?: string;
      sha1hash?: string;
      extension?: string;
      mimeType?: string;
      size?: number;
      assetId?: string;
      uploadId?: string;
      path?: string;
      url?: string;
      metadata?: SanityImageMetadata;
      source?: SanityAssetSourceData;
    } | null;
  } | null;
  blurb?: string;
  contact?: Contact;
  about?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  homepage: {
    slug: Slug;
  } | null;
  navigation: Array<{
    title: string | null;
    pages: null;
  }> | null;
} | {
  _id: string;
  _type: "taxonomy";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  descriptiveNote?: string;
  icon?: Icon;
  prefLabel: string;
  definition?: string;
  related?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "taxonomy";
  };
  broader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "taxonomy";
  };
  narrower?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "taxonomy";
  };
  logo: null;
  homepage: null;
  navigation: null;
} | null;
// Variable: pageQuery
// Query: *[_type=='page' && slug.current match $slug][0] {  	...,		sections[] {			...,			blocks[] {				...,				_type == "archive_block" => {					...,					featuredTaxonomies[]-> {						...,					} 				},				_type == "featuredTaxonomies_block" => {					...,					taxonomies[]->,				},				_type == "featuredArticles_block" => {					...,					articles[]-> {						...,						image {							...,							"imageAsset":asset->						}					},				},				_type == "image_block" => {					...,					image {						...,						"imageAsset":asset->					}				},				_type == "gallery_block" => {					...,					images[] {						...,						"imageAsset":asset->					}				}			}		}	}
export type PageQueryResult = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  blocks?: {
    blocks?: Array<{
      _key: string;
    } & Archive_block | {
      _key: string;
    } & Contact_block | {
      _key: string;
    } & FeaturedArticles_block | {
      _key: string;
    } & FeaturedTaxonomies_block | {
      _key: string;
    } & Gallery_block | {
      _key: string;
    } & Image_block | {
      _key: string;
    } & Info_block | {
      _key: string;
    } & Newsletter_block | {
      _key: string;
    } & Text_block>;
  };
  slug: Slug;
  sections: null;
} | null;
// Variable: staticPagesQuery
// Query: *[_type == 'page'] {		...,		"slug":slug.current,		sections[] {			...,			blocks[] {				...,				_type == "archive_block" => {					...,					featuredTaxonomies[]-> {						...,					} 				},				_type == "featuredTaxonomies_block" => {					...,					taxonomies[]->,				},				_type == "featuredArticles_block" => {					...,					articles[]-> {						...,						image {							...,							"imageAsset":asset->						}					},				},				_type == "image_block" => {					...,					image {						...,						"imageAsset":asset->					}				},				_type == "gallery_block" => {					...,					images[] {						...,						"imageAsset":asset->					}				}			}		}	}
export type StaticPagesQueryResult = Array<{
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  blocks?: {
    blocks?: Array<{
      _key: string;
    } & Archive_block | {
      _key: string;
    } & Contact_block | {
      _key: string;
    } & FeaturedArticles_block | {
      _key: string;
    } & FeaturedTaxonomies_block | {
      _key: string;
    } & Gallery_block | {
      _key: string;
    } & Image_block | {
      _key: string;
    } & Info_block | {
      _key: string;
    } & Newsletter_block | {
      _key: string;
    } & Text_block>;
  };
  slug: string;
  sections: null;
}>;
// Variable: staticArchivesQuery
// Query: *[_type == 'archive'] {		...,		sections[] {			...,			blocks[] {				...,				_type == "archive_block" => {					...,					featuredTaxonomies[]-> {						...,					} 				},				_type == "featuredTaxonomies_block" => {					...,					taxonomies[]->,				},				_type == "featuredArticles_block" => {					...,					articles[]-> {						...,						image {							...,							"imageAsset":asset->						}					},				},				_type == "image_block" => {					...,					image {						...,						"imageAsset":asset->					}				},				_type == "gallery_block" => {					...,					images[] {						...,						"imageAsset":asset->					}				}			}		}	}
export type StaticArchivesQueryResult = Array<{
  _id: string;
  _type: "archive";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  blocks?: {
    blocks?: Array<{
      _key: string;
    } & Archive_block | {
      _key: string;
    } & Contact_block | {
      _key: string;
    } & FeaturedArticles_block | {
      _key: string;
    } & FeaturedTaxonomies_block | {
      _key: string;
    } & Gallery_block | {
      _key: string;
    } & Image_block | {
      _key: string;
    } & Info_block | {
      _key: string;
    } & Newsletter_block | {
      _key: string;
    } & Text_block>;
  };
  sections: null;
}>;
// Variable: documentQuery
// Query: *[_id == $id][0] {  	...,		"slug":slug.current,	}
export type DocumentQueryResult = {
  _id: string;
  _type: "archive";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  blocks?: {
    blocks?: Array<{
      _key: string;
    } & Archive_block | {
      _key: string;
    } & Contact_block | {
      _key: string;
    } & FeaturedArticles_block | {
      _key: string;
    } & FeaturedTaxonomies_block | {
      _key: string;
    } & Gallery_block | {
      _key: string;
    } & Image_block | {
      _key: string;
    } & Info_block | {
      _key: string;
    } & Newsletter_block | {
      _key: string;
    } & Text_block>;
  };
  slug: null;
} | {
  _id: string;
  _type: "article";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  isArticle?: boolean;
  title: string;
  slug: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  taxonomies?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "taxonomy";
  }>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
} | {
  _id: string;
  _type: "media.tag";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: Slug;
  slug: null;
} | {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  blocks?: {
    blocks?: Array<{
      _key: string;
    } & Archive_block | {
      _key: string;
    } & Contact_block | {
      _key: string;
    } & FeaturedArticles_block | {
      _key: string;
    } & FeaturedTaxonomies_block | {
      _key: string;
    } & Gallery_block | {
      _key: string;
    } & Image_block | {
      _key: string;
    } & Info_block | {
      _key: string;
    } & Newsletter_block | {
      _key: string;
    } & Text_block>;
  };
  slug: string;
} | {
  _id: string;
  _type: "project";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  isArticle?: boolean;
  title: string;
  slug: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  taxonomies?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "taxonomy";
  }>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  githubUrl?: string;
} | {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
  slug: null;
} | {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
  slug: null;
} | {
  _id: string;
  _type: "settings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  blurb?: string;
  contact?: Contact;
  about?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  homepage?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  };
  navigation?: Array<{
    _key: string;
  } & NavGroup>;
  slug: null;
} | {
  _id: string;
  _type: "taxonomy";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  descriptiveNote?: string;
  icon?: Icon;
  prefLabel: string;
  definition?: string;
  related?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "taxonomy";
  };
  broader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "taxonomy";
  };
  narrower?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "taxonomy";
  };
  slug: null;
} | null;
// Variable: articleQuery
// Query: *[_id == $id && isArticle == true][0] {  	...,		"slug":slug.current,		taxonomies[]->	}
export type ArticleQueryResult = {
  _id: string;
  _type: "article";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  isArticle?: boolean;
  title: string;
  slug: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  taxonomies: Array<{
    _id: string;
    _type: "taxonomy";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    descriptiveNote?: string;
    icon?: Icon;
    prefLabel: string;
    definition?: string;
    related?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "taxonomy";
    };
    broader?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "taxonomy";
    };
    narrower?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "taxonomy";
    };
  }> | null;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
} | {
  _id: string;
  _type: "project";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  isArticle?: boolean;
  title: string;
  slug: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  taxonomies: Array<{
    _id: string;
    _type: "taxonomy";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    descriptiveNote?: string;
    icon?: Icon;
    prefLabel: string;
    definition?: string;
    related?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "taxonomy";
    };
    broader?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "taxonomy";
    };
    narrower?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "taxonomy";
    };
  }> | null;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  githubUrl?: string;
} | null;
// Variable: bundleArticleQuery
// Query: *[_type == $article && isArticle == true] {		...,		"slug":slug.current,		taxonomies[]->	}
export type BundleArticleQueryResult = Array<{
  _id: string;
  _type: "article";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  isArticle?: boolean;
  title: string;
  slug: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  taxonomies: Array<{
    _id: string;
    _type: "taxonomy";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    descriptiveNote?: string;
    icon?: Icon;
    prefLabel: string;
    definition?: string;
    related?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "taxonomy";
    };
    broader?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "taxonomy";
    };
    narrower?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "taxonomy";
    };
  }> | null;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
} | {
  _id: string;
  _type: "project";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  isArticle?: boolean;
  title: string;
  slug: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  taxonomies: Array<{
    _id: string;
    _type: "taxonomy";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    descriptiveNote?: string;
    icon?: Icon;
    prefLabel: string;
    definition?: string;
    related?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "taxonomy";
    };
    broader?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "taxonomy";
    };
    narrower?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "taxonomy";
    };
  }> | null;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  githubUrl?: string;
}>;
// Variable: archiveQuery
// Query: *[_type=='archive' && _id == $archiveID][0] {  	...,		sections[] {			...,			blocks[] {				...,				_type == "archive_block" => {					...,					featuredTaxonomies[]-> {						...,					} 				},				_type == "featuredTaxonomies_block" => {					...,					taxonomies[]->,				},				_type == "featuredArticles_block" => {					...,					articles[]-> {						...,						image {							...,							"imageAsset":asset->						}					},				},				_type == "image_block" => {					...,					image {						...,						"imageAsset":asset->					}				},				_type == "gallery_block" => {					...,					images[] {						...,						"imageAsset":asset->					}				}			}		}	}
export type ArchiveQueryResult = {
  _id: string;
  _type: "archive";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  blocks?: {
    blocks?: Array<{
      _key: string;
    } & Archive_block | {
      _key: string;
    } & Contact_block | {
      _key: string;
    } & FeaturedArticles_block | {
      _key: string;
    } & FeaturedTaxonomies_block | {
      _key: string;
    } & Gallery_block | {
      _key: string;
    } & Image_block | {
      _key: string;
    } & Info_block | {
      _key: string;
    } & Newsletter_block | {
      _key: string;
    } & Text_block>;
  };
  sections: null;
} | null;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "\n  *[_type == \"page\" && defined(slug.current)] {\n\t\t\"slug\": slug.current\n\t}\n": PagesSlugsResult;
    "\n\t*[_id == \"siteSettings\"][0] {\n\t\t...,\n\t\tlogo {\n\t\t\t...,\n\t\t\t\"imageAsset\":asset->\n\t\t},\n\t\thomepage->{\n\t\t\tslug\n\t\t},\n\t\tnavigation[]{\n\t\t\ttitle,\n\t\t\tpages[]->{\n\t\t\t\t\"slug\":slug.current\n\t\t\t}\n\t\t}\n\t}\n": SettingsQueryResult;
    "\n\t*[_type=='page' && slug.current match $slug][0] {\n  \t...,\n\t\tsections[] {\n\t\t\t...,\n\t\t\tblocks[] {\n\t\t\t\t...,\n\t\t\t\t_type == \"archive_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\tfeaturedTaxonomies[]-> {\n\t\t\t\t\t\t...,\n\t\t\t\t\t} \n\t\t\t\t},\n\t\t\t\t_type == \"featuredTaxonomies_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\ttaxonomies[]->,\n\t\t\t\t},\n\t\t\t\t_type == \"featuredArticles_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\tarticles[]-> {\n\t\t\t\t\t\t...,\n\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t...,\n\t\t\t\t\t\t\t\"imageAsset\":asset->\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t_type == \"image_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\timage {\n\t\t\t\t\t\t...,\n\t\t\t\t\t\t\"imageAsset\":asset->\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t_type == \"gallery_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\timages[] {\n\t\t\t\t\t\t...,\n\t\t\t\t\t\t\"imageAsset\":asset->\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": PageQueryResult;
    "\n\t*[_type == 'page'] {\n\t\t...,\n\t\t\"slug\":slug.current,\n\t\tsections[] {\n\t\t\t...,\n\t\t\tblocks[] {\n\t\t\t\t...,\n\t\t\t\t_type == \"archive_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\tfeaturedTaxonomies[]-> {\n\t\t\t\t\t\t...,\n\t\t\t\t\t} \n\t\t\t\t},\n\t\t\t\t_type == \"featuredTaxonomies_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\ttaxonomies[]->,\n\t\t\t\t},\n\t\t\t\t_type == \"featuredArticles_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\tarticles[]-> {\n\t\t\t\t\t\t...,\n\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t...,\n\t\t\t\t\t\t\t\"imageAsset\":asset->\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t_type == \"image_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\timage {\n\t\t\t\t\t\t...,\n\t\t\t\t\t\t\"imageAsset\":asset->\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t_type == \"gallery_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\timages[] {\n\t\t\t\t\t\t...,\n\t\t\t\t\t\t\"imageAsset\":asset->\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": StaticPagesQueryResult;
    "\n\t*[_type == 'archive'] {\n\t\t...,\n\t\tsections[] {\n\t\t\t...,\n\t\t\tblocks[] {\n\t\t\t\t...,\n\t\t\t\t_type == \"archive_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\tfeaturedTaxonomies[]-> {\n\t\t\t\t\t\t...,\n\t\t\t\t\t} \n\t\t\t\t},\n\t\t\t\t_type == \"featuredTaxonomies_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\ttaxonomies[]->,\n\t\t\t\t},\n\t\t\t\t_type == \"featuredArticles_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\tarticles[]-> {\n\t\t\t\t\t\t...,\n\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t...,\n\t\t\t\t\t\t\t\"imageAsset\":asset->\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t_type == \"image_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\timage {\n\t\t\t\t\t\t...,\n\t\t\t\t\t\t\"imageAsset\":asset->\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t_type == \"gallery_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\timages[] {\n\t\t\t\t\t\t...,\n\t\t\t\t\t\t\"imageAsset\":asset->\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": StaticArchivesQueryResult;
    "\n\t*[_id == $id][0] {\n  \t...,\n\t\t\"slug\":slug.current,\n\t}\n": DocumentQueryResult;
    "\n\t*[_id == $id && isArticle == true][0] {\n  \t...,\n\t\t\"slug\":slug.current,\n\t\ttaxonomies[]->\n\t}\n": ArticleQueryResult;
    "\n\t*[_type == $article && isArticle == true] {\n\t\t...,\n\t\t\"slug\":slug.current,\n\t\ttaxonomies[]->\n\t}\n": BundleArticleQueryResult;
    "\n\t*[_type=='archive' && _id == $archiveID][0] {\n  \t...,\n\t\tsections[] {\n\t\t\t...,\n\t\t\tblocks[] {\n\t\t\t\t...,\n\t\t\t\t_type == \"archive_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\tfeaturedTaxonomies[]-> {\n\t\t\t\t\t\t...,\n\t\t\t\t\t} \n\t\t\t\t},\n\t\t\t\t_type == \"featuredTaxonomies_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\ttaxonomies[]->,\n\t\t\t\t},\n\t\t\t\t_type == \"featuredArticles_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\tarticles[]-> {\n\t\t\t\t\t\t...,\n\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t...,\n\t\t\t\t\t\t\t\"imageAsset\":asset->\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t_type == \"image_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\timage {\n\t\t\t\t\t\t...,\n\t\t\t\t\t\t\"imageAsset\":asset->\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t_type == \"gallery_block\" => {\n\t\t\t\t\t...,\n\t\t\t\t\timages[] {\n\t\t\t\t\t\t...,\n\t\t\t\t\t\t\"imageAsset\":asset->\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": ArchiveQueryResult;
  }
}
